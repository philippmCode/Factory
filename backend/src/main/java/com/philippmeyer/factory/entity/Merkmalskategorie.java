package com.philippmeyer.factory.entity;

import jakarta.persistence.*;

/**
 * Represents a category for features (Merkmale) in the database.
 * This entity is mapped to a table in the relational database using JPA.
 */
@Entity // Marks this class as a JPA entity, representing a database table.
public class Merkmalskategorie {

    @Id // Designates this field as the primary key.
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Specifies that the PK value is automatically generated by the database (e.g., auto-increment).
    private int id; // The unique identifier for the category.

    // Maps to a regular column in the database table.
    private String bezeichner; // The name/identifier of the category (e.g., "Temperature", "Pressure").

    /**
     * Default constructor required by JPA specification.
     */
    public Merkmalskategorie() {
        // Default constructor
    }

    /**
     * Provides a string representation of the object for logging and debugging.
     */
    @Override
    public String toString() {
        // Note: The package name in the original toString() was adjusted to match the actual package structure.
        return "com.philippmeyer.factory.entity.Merkmalskategorie{" +
                "id=" + id +
                ", bezeichner='" + bezeichner + '\'' +
                '}';
    }

    // --- Getters and Setters ---

    /**
     * Retrieves the unique identifier of the category.
     * @return The category ID.
     */
    public int getId() { return id; }

    /**
     * Sets the unique identifier of the category.
     * @param id The new category ID.
     */
    public void setId(int id) { this.id = id; }

    /**
     * Retrieves the descriptive name/identifier of the category.
     * @return The category name.
     */
    public String getBezeichner() { return bezeichner; }

    /**
     * Sets the descriptive name/identifier of the category.
     * @param bezeichner The new category name.
     */
    public void setBezeichner(String bezeichner) { this.bezeichner = bezeichner; }
}